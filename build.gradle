plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.5'
}

group = 'io.github.iherongh'
version = '0.1.0-SNAPSHOT'

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://repo.papermc.io/repository/maven-public/' }
        maven { url 'https://hub.spigotmc.org/nexus/content/repositories/public/' }
        maven { url 'https://oss.sonatype.org/content/groups/public/' }

    }

}

dependencies {
    testImplementation 'com.github.seeseemelk:MockBukkit-v1.21:3.133.2'
    implementation 'dev.jorel:commandapi-bukkit-test-toolkit:9.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.4'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.4'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    annotationProcessor "dev.jorel:commandapi-annotations:9.7.0"

    compileOnly "io.papermc.paper:paper-api:1.21.3-R0.1-SNAPSHOT"

    implementation "dev.jorel:commandapi-bukkit-shade:9.7.0"

    compileOnly "dev.jorel:commandapi-annotations:9.7.0"

    implementation 'io.github.fastily:jwiki:1.11.0'

}

def targetJavaVersion = 21

java {
    def javaVersion = JavaVersion.toVersion( targetJavaVersion )
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if ( JavaVersion.current() < javaVersion ) {
        toolchain.languageVersion = JavaLanguageVersion.of( targetJavaVersion )
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set( targetJavaVersion )

    }

}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching( 'plugin.yml' ) {
        expand props

    }

}

tasks.named( "test" ).configure {
    useJUnitPlatform()

}

shadowJar {
    relocate( 'dev.jorel.commandapi', 'io.github.iherongh.commandapi')

}
